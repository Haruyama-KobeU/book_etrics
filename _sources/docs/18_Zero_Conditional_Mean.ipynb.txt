{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# GM仮定４が満たされない場合"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import multivariate_normal, norm, uniform\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from statsmodels.formula.api import ols\n",
    "import matplotlib.pyplot as plt\n",
    "from numba import njit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## 説明"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "仮定４：Zero conditional mean $\\text{E}\\left(u|X\\right)=0$\n",
    "\n",
    "* この仮定が満たされない場合，`OLS`推定量は不偏性・一致性が満たされない。\n",
    "* 経済学の実証分析では，この仮定が満たされない場合が多々ある。その主な理由に次の３つが挙げられる。\n",
    "    * 欠落変数\n",
    "    * 測定誤差\n",
    "    * 同時方程式\n",
    "\n",
    "以下ではこの３つについて説明し，シミュレーションで発生するバイアスを確認する。\n",
    "\n",
    "その前に，仮定４が満たされる場合と満たされない場合の違いをシミュレーションを通して直感的に理解する。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## シミュレーション"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "### 準備"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "パラメータの真の値を設定する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "b0=1.0\n",
    "b1=1.0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの関数を作成"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "def sim_a4(n, m):  # n=標本の大きさ, m=共分散\n",
    "    \n",
    "    rv_mean = [4, 0]  # x, uの平均\n",
    "    rv_cov = [[1.0, m],   # x, uの共分散行列\n",
    "               [m, 0.1]]  # Cov(x,u)=m\n",
    "    \n",
    "    rv = multivariate_normal.rvs(rv_mean, rv_cov, size=n)  # x1, uをnセット抽出\n",
    "    x = rv[:,0]  # 説明変数\n",
    "    u = rv[:,1]  # 誤差項\n",
    "    y = b0 + b1*x + u  # 説明変数\n",
    "\n",
    "    df = pd.DataFrame({'Y':y, 'X':x})  # DataFrameの作成\n",
    "    res = ols(formula='Y ~ X', data=df).fit()  # OLS推定\n",
    "\n",
    "    return x, y, u, res.params[0], res.params[1] # 返り値の設定"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "ここで重要な役割を果たすのが説明変数と誤差項の共分散を表す`m`である。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "### 仮定４が満たされる場合：$m=0$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "x_0, y_0, u_0, b0hat_0, b1hat_0 = sim_a4(100, m=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "母集団の誤差項$u$と説明変数$x$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_0,u_0)\n",
    "plt.axhline(0)\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "共分散を計算してみよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.        , -0.07541443],\n",
       "       [-0.07541443,  1.        ]])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.corrcoef(x_0,u_0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "共分散は非常に小さな数字であり，特定な傾向がない。次に，母集団回帰直線とOLS回帰直線を比べてみる。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xx = np.linspace(min(x_0),max(x_0),100)\n",
    "\n",
    "plt.scatter(x_0,y_0)\n",
    "plt.plot(xx,b0hat_0+b1hat_0*xx, 'k', label='OLS')\n",
    "plt.plot(xx,b0+b1*xx,'r', label='Pop Regression Line')\n",
    "plt.legend()\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "推定量が不偏性を満たしているため両方は殆ど同じである。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 仮定４が満たされない場合：$m\\neq 0$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_1, y_1, u_1, b0hat_1, b1hat_1 = sim_a4(100, m=0.25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "母集団の誤差項$u$と説明変数$x$を図示しよう。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_1,u_1)\n",
    "plt.axhline(0)\n",
    "pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.        , 0.83936146],\n",
       "       [0.83936146, 1.        ]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.corrcoef(x_1,u_1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "強い正の共分散が確認できる。母集団回帰線とOLS回帰直線を比べる。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xx = np.linspace(min(x_1),max(x_1),100)\n",
    "\n",
    "plt.scatter(x_1,y_1)\n",
    "plt.plot(xx,b0hat_1+b1hat_1*xx, 'k', label='OLS')\n",
    "plt.plot(xx,b0+b1*xx, 'r', label='Pop Regression Line')\n",
    "plt.legend()\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "明らかに異なる。GM仮定４が満たされず，推定量の不偏性が満たされないためである。この場合，一致性も満たされない。標本の大きさ`n`を`100000`にして確かめてみる。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_1, y_1, u_1, b0hat_1, b1hat_1 = sim_a4(100_000, m=0.25)\n",
    "\n",
    "xx = np.linspace(min(x_1),max(x_1),100)\n",
    "\n",
    "plt.scatter(x_1,y_1, alpha=0.1)  # 下の説明を参照\n",
    "plt.plot(xx,b0hat_1+b1hat_1*xx, 'k', label='OLS')\n",
    "plt.plot(xx,b0+b1*xx,'r', label='Pop Regression Line')\n",
    "plt.legend()\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "上から３行目に`alpha=0.1`とあるが，散布図のマーカーの透明度をしている引数であり`0~1`の値をとる。デフォルトは`1`であり，`0`は透明になる。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## 欠落変数"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### 欠落変数バイアス"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "母集団のモデルは以下で与えられるとしよう。\n",
    "\n",
    "$$y=\\beta_0+\\beta_1 x_1+\\beta_2x_2+\\beta_3x_3+u\\qquad\\quad(\\text{母集団モデル})$$\n",
    "\n",
    "実際に推定されるモデル（$x_3$が欠落）：\n",
    "\n",
    "$$y=\\gamma_0+\\gamma_1 x_1+\\gamma_2x_2+\\eta\\qquad\\quad(\\text{推定モデル})$$\n",
    "\n",
    "更に，$x_1$と$x_3$には以下の関係があると仮定する。\n",
    "\n",
    "$$x_3=\\delta_0+\\delta_1 x_1+\\epsilon\\qquad\\quad(\\text{仮定})$$\n",
    "\n",
    "この式を母集団モデルに代入すると：\n",
    "\n",
    "$$y=(\\beta_0+\\beta_3\\delta_0)+(\\beta_1+\\beta_3\\delta_1)x_1+\\beta_2x_2+\\tilde{\\eta}$$\n",
    "\n",
    "ここで，$\\tilde{\\eta}\\equiv\\beta_3\\epsilon+u$。推定モデルはこの関係に基づいて係数を計算することになる。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "**（結果１）**\n",
    "\n",
    "推定モデルを使うと\n",
    "* $\\hat{\\gamma}_0$は$\\beta_0+\\beta_3\\delta_0$の推定値\n",
    "* $\\hat{\\gamma}_1$は$\\beta_1+\\beta_3\\delta_1$の推定値\n",
    "* $\\hat{\\gamma}_2$は$\\beta_2$の推定値\n",
    "\n",
    "となり$\\gamma_0$と$\\gamma_1$の推定値にバイアスが発生する。一方，$\\hat{\\gamma}_2$にはバイアスは発生しない。欠落変数と無相関の変数（定数以外）にはバイアスは発生しないためである。\n",
    "\n",
    "**（結果２）**\n",
    "* 欠落変数が回帰式の説明変数と無相関であれば，バイアスは発生しない！"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "**（理由）**\n",
    "\n",
    "GM仮定４が満たされていないため。母集団モデル，推定モデルと仮定の式から\n",
    "\n",
    "$$\n",
    "\\eta=\\beta_3x_3+u=\\beta_3(\\delta_0+\\delta_1x_1+\\epsilon)+u\n",
    "\\quad\\Rightarrow\\quad\n",
    "\\tilde{\\eta}=\\eta-\\beta_3(\\delta_0+\\delta_1x_1)\n",
    "$$\n",
    "\n",
    "これから$x_1$と$\\tilde{\\eta}$は相関することがわかる。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション１：推定値の計算"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "One-shotのシミュレーションをおこないバイアスの発生を確認する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept    1.609605\n",
       "X1           3.101807\n",
       "X2           0.991682\n",
       "dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 母集団のパラメータ\n",
    "b0 = 1\n",
    "b1 = 1\n",
    "b2 = 1\n",
    "b3 = 1\n",
    "\n",
    "# 標本数\n",
    "n = 1000\n",
    "\n",
    "# 説明変数　x1, x2\n",
    "x1 = np.random.normal(4, 1, size=n)\n",
    "x2 = np.random.uniform(1, 10, size=n)\n",
    "\n",
    "# 説明変数　x3\n",
    "e = np.random.normal(size=n)\n",
    "m = 2.0  # x1との相関性を捉える\n",
    "x3 = 1 + m*x1 + e\n",
    "\n",
    "# 母集団の誤差項\n",
    "u = np.random.normal(size=n)\n",
    "y = b0 + b1*x1 + b2*x2 + b3*x3 + u\n",
    "\n",
    "# 標本のDataFrame\n",
    "df_sample = pd.DataFrame({'Y':y, 'X1':x1, 'X2':x2, 'X3':x3})\n",
    "\n",
    "# 推定\n",
    "formula_omitted = 'Y ~ X1 + X2'\n",
    "res_omitted = ols(formula_omitted, data=df_sample).fit()\n",
    "res_omitted.params"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "`X1`のパラメータの値は真の値と明らかに異なる。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション２：推定値の分布"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "`OLS`推定量の分布を確認する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "# 母集団のパラメータの値\n",
    "b0 = 1\n",
    "b1 = 1\n",
    "b2 = 1\n",
    "b3 = 1\n",
    "\n",
    "# シミュレーションの回数\n",
    "N = 10_000"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの関数を設定する。\n",
    "* 引数：\n",
    "    * `n`：標本の大きさ\n",
    "    * `m`：`x1`と`x3`の相関を捉えるパラメータ\n",
    "* 戻り値：推定値のリスト"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "@njit\n",
    "def sim_omitted(n,m):\n",
    "\n",
    "    # 空のリスト\n",
    "    b0hat_list = []\n",
    "    b1hat_list = []\n",
    "    b2hat_list = []\n",
    "\n",
    "    # 説明変数\n",
    "    x1 = np.random.normal(loc=4, scale=1, size=n)\n",
    "    x2 = np.random.uniform(1, 10, size=n)\n",
    "    e = np.random.normal(loc=0, scale=1, size=n)\n",
    "    x3 = 1 + m*x1 + e\n",
    "    \n",
    "    c = np.ones(n)  # 定数項\n",
    "    \n",
    "    for i in range(N):  # N回のループ\n",
    "        # 母集団\n",
    "        u = np.random.normal(loc=0, scale=1, size=n)\n",
    "        y = b0 + b1*x1 + b2*x2 + b3*x3 + u\n",
    "        \n",
    "        X = np.stack((c,x1,x2), axis=1)  # 説明変数の行列\n",
    "        bhat = np.linalg.inv((X.T)@X)@(X.T)@y  # OLS推定\n",
    "        \n",
    "        b0hat_list.append(bhat[0])\n",
    "        b1hat_list.append(bhat[1])\n",
    "        b2hat_list.append(bhat[2])\n",
    "\n",
    "    return b0hat_list, b1hat_list, b2hat_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの開始"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "b0hat, b1hat, b2hat = sim_omitted(1000,m=2.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_0$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b0hat, bins=30)\n",
    "plt.axvline(x=b0, color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_1$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b1hat, bins=30)\n",
    "plt.axvline(x=b1, color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_2$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b2hat, bins=30)\n",
    "plt.axvline(x=b2, color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## 測定誤差"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### 測定誤差によるバイアス"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "次の母集団回帰式を考えよう。\n",
    "\n",
    "$$y=\\beta_0+\\beta_1 x^* + \\eta$$\n",
    "\n",
    "ここで，被説明変数$y$は正確に測定できるが，説明変数$x^*$は以下の式に従って測定される仮定する。\n",
    "\n",
    "$$x=x^*+e$$\n",
    "\n",
    "* $x$：測定値\n",
    "* $e$：測定誤差\n",
    "\n",
    "（仮定）\n",
    "\n",
    "* 測定誤差$e$は真の値と無関係。即ち，$\\text{Cov}(x^*,e)=0$\n",
    "\n",
    "（結果）\n",
    "\n",
    "* 次式をOLS推定する場合，$\\hat{\\beta}_1$は不偏性・一致性を満たさない。\n",
    "\n",
    "$$y=\\beta_0+\\beta_1 x + u,\\qquad u=\\eta-\\beta e$$\n",
    "\n",
    "（理由）\n",
    "\n",
    "仮定４：$\\text{Cov}(x,u)=0$が満たされない。\n",
    "\n",
    "$$\n",
    "\\text{Cov}(x,u)=\\text{E}[xu]\n",
    "=\\text{E}\\left[(x^*+e)(\\eta-\\beta e)\\right]\n",
    "=-\\beta\\cdot\\text{E}(e^2)>0\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション１：推定値の計算"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "One-shotのシミュレーションをおこないバイアスの発生を確認する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept    4.209721\n",
       "X            0.407706\n",
       "dtype: float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 標本の大きさ\n",
    "n = 100\n",
    "\n",
    "# 母集団回帰式\n",
    "b0 = 1.0\n",
    "b1 = 1.0\n",
    "x_pop = np.random.uniform(1,10,size=n)  # 母集団の説明変数\n",
    "u = np.random.normal(scale=1, size=n)  # 母集団の誤差項\n",
    "y = b0 + b1*x_pop + u  # 母集団回帰式\n",
    "\n",
    "# 測定誤差\n",
    "error_sd = 3  # 測定誤差の標準偏差\n",
    "x = x_pop + np.random.normal(scale=error_sd, size=n)  # 測定誤差\n",
    "\n",
    "# OLS推定\n",
    "df_sim = pd.DataFrame({'Y':y, 'X':x})  # DataFrameの作成\n",
    "res_ols = ols('Y ~ X', data=df_sim).fit()  # OLS推定\n",
    "\n",
    "res_ols.params  # OLS推定量"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション２：推定値の分布"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "`OLS`推定量の分布を確認する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "# 真のパラメータ\n",
    "b0 = 1.0\n",
    "b1 = 1.0\n",
    "\n",
    "# シミュレーションの回数\n",
    "N = 100_000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "@njit\n",
    "def sim_measure(n):\n",
    "    \n",
    "    b0hat_list = []\n",
    "    b1hat_list = []\n",
    "\n",
    "    x_pop = np.random.uniform(1,10,size=n)  # 母集団の説明変数\n",
    "    \n",
    "    c = np.ones(n)  # 定数項\n",
    "        \n",
    "    # 説明変数の測定誤差\n",
    "    error_sd = 3  # 測定誤差の標準偏差\n",
    "    x = x_pop + np.random.normal(loc=0, scale=error_sd, size=n)  # 測定誤差\n",
    "\n",
    "    for i in range(N):\n",
    "        u = np.random.normal(loc=0, scale=1, size=n)  # 母集団の誤差項\n",
    "        y = b0 + b1*x_pop + u  # 母集団回帰式\n",
    "        \n",
    "        X = np.stack((c,x), axis=1)  # 説明変数の行列\n",
    "        bhat = np.linalg.inv((X.T)@X)@(X.T)@y  # OLS推定\n",
    "        \n",
    "        b0hat_list.append(bhat[0])\n",
    "        b1hat_list.append(bhat[1])\n",
    "\n",
    "    return b0hat_list, b1hat_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの開始"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "b0hat, b1hat = sim_measure(100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_0$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b0hat,bins=30)\n",
    "plt.axvline(x=b0,color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_1$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b1hat,bins=30)\n",
    "plt.axvline(x=b1,color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "## 同時方程式"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### 同時性バイアス"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "同時方程式モデルとは，均衡メカニズムなどを通して複数の内生変数が複数の式によって同時決定されるモデルである。例として労働の需給モデルを考えよう。均衡では需要量（$L_d$）と供給量（$L_s$）は等しくなり（$L=L_d=L_s$），需要と供給はそれぞれ均衡賃金（$W$）に依存する。\n",
    "* 労働供給関数\n",
    "\n",
    "    $$ L = s_0+s_1 W + s_2 X_s + u_s\\qquad\\qquad\\qquad\\text{(式１)}$$\n",
    "\n",
    "    * $s_1>0$\n",
    "    * $X_s=$ 供給の「その他」の決定要因（例えば，所得水準）\n",
    "    * $u_s=$ 供給の誤差項\n",
    "\n",
    "* 労働需要関数\n",
    "\n",
    "    $$ W = d_0+d_1 L + d_2 X_d + u_d\\qquad\\qquad\\qquad\\text{(式２)}$$\n",
    "        \n",
    "    * $d_1<0$\n",
    "    * $X_d=$ 需要の「その他」の決定要因（例えば，教育水準）\n",
    "    * $u_d=$ 需要の誤差項\n",
    "\n",
    "（相関性の仮定）\n",
    "* $\\text{Cov}(X_s,u_s)=\\text{Cov}(X_d,u_d)=\\text{Cov}(u_s,u_d)=0$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "上の式は**構造方程式（structural equations）**\n",
    "と呼ばれる。これらの式を直接推定するとOLS推定量にはバイアスが発生する。理由は，供給関数では$\\text{Cov}(W,u_s)\\neq 0$となり需要関数でも$\\text{Cov}(L,u_d)\\neq 0$となるためである。即ち，仮定４が満たされないのである。この結果は簡単に示すことができる。２つの式を同時方程式として$L$と$W$の解を計算すると次式を得る。\n",
    "\n",
    "$$L=\\alpha_0+\\alpha_1X_d+\\alpha_2X_s+\\frac{s_1u_d+u_s}{1-d_1s_1}\\qquad\\qquad\\qquad\\text{(式３)}$$\n",
    "\n",
    "$$W=\\beta_0+\\beta_1X_d+\\beta_2X_s+\\frac{d_1u_s+u_d}{1-d_1s_1}\\qquad\\qquad\\qquad\\text{(式４)}$$\n",
    "\n",
    "ここで$\\alpha_i$,$\\beta_i$,$i=0,1,2$は$d_i$,$s_i$,$i=0,1,2$の非線形な形をとることになる。\n",
    "このような$L$と$W$の解の式は**誘導型方程式（reduced-form equations）**\n",
    "と呼ばれるが，この式から次の点は明らかである。\n",
    "* （式３）：$L$は$u_d$に依存し，$L$と$u_d$は相関する　$\\Rightarrow$　$\\text{Cov}(L,u_d)\\neq 0$\n",
    "* （式４）：$W$も$u_s$に依存し，$W$と$u_s$は相関する　$\\Rightarrow$　$\\text{Cov}(W,u_s)\\neq 0$\n",
    "\n",
    "では誘導型方程式を推定すればどうなるのか？相関性の仮定のもと$\\hat{\\alpha}_i$,$\\hat{\\beta}_i$,$i=0,1,2$は不偏性・一致性を保持する。しかし問題は，誘導型方程式を満たす構造方程式は無数にあり，その推定値から$d_i$,$s_i$,$i=0,1,2$を復元できないのである。従って，それらのパラメータの値を推定するためには(式１)と(式２)を推定する必要がある。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション１：推定値の計算"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "（目的）\n",
    "\n",
    "One-shotのシミュレーションをおこない構造方程式を直接推定すると推定値にバイアスが発生することを確認する。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの簡単化のために(式２)の中で$s_2=0$を仮定する。これにより，(式３)と(式４)のパラメータは以下で与えられる。\n",
    "\n",
    "$$\n",
    "\\alpha_0\\equiv\\frac{s_0+s_1d_0}{1-s_1d_1},\\quad\n",
    "\\alpha_1\\equiv\\frac{s_1d_2}{1-s_1d_1},\\quad\n",
    "\\alpha_2=0\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\beta_0\\equiv\\frac{d_0+d_1s_0}{1-s_1d_1},\\quad\n",
    "\\beta_1\\equiv d_2,\\quad\n",
    "\\beta_2=0\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "（シミュレーション・プラン）\n",
    "* $s_0$と$d_i$, $i=0,1,2$の値を設定し，(式３)と(式４)に従う抽出データを生成する（標本の大きさ$=n$）\n",
    "* この標本データを使い(式２)を推定し，推定量のバイアスを確認する。\n",
    "\n",
    "母集団のパラメータを次のように設定する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "s0 = 1.0\n",
    "s1 = 0.5\n",
    "\n",
    "d0 = 1.5\n",
    "d1 = -1\n",
    "d2 = 2.0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "標本の大きさ"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "n = 10_000"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "抽出された説明変数と被説明変数（誤差項）"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "xd = np.random.uniform(1,10,size=n)  # 説明変数\n",
    "ud = np.random.normal(loc=0, scale=1, size=n)  # 母集団の誤差項\n",
    "us = np.random.normal(loc=0, scale=2, size=n)  # 母集団の誤差項"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "母集団の労働供給曲線"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "hidden": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "l = (s0+s1*d0)/(1-s1*d1) + (s1*d2/(1-s1*d1))*xd + (s1*ud+us)/(1-s1*d1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "母集団の労働需要曲線"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "w = (d0+d1*s0)/(1-s1*d1) + d2*xd + (d1*us+ud)/(1-s1*d1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "労働需要曲線を使い賃金をOLS推定"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept    1.285092\n",
       "L           -0.828900\n",
       "Xd           2.555553\n",
       "dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_simul = pd.DataFrame({'W':w, 'L':l, 'Xd':xd})  # DataFrameの作成\n",
    "\n",
    "res_ols = ols('W ~ L + Xd', data=df_simul).fit()  # OLS推定\n",
    "\n",
    "res_ols.params  # OLS推定量"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "分かりやすく表示する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "d0の真の値：1.5\t\td0の推定量：1.2850921630331302\n",
      "d1の真の値：-1\t\td1の推定量：-0.8288995761741291\n",
      "d2の真の値：2.0\t\td2の推定量：2.5555533979445997\n"
     ]
    }
   ],
   "source": [
    "print(f'd0の真の値：{d0}\\t\\td0の推定量：{res_ols.params[0]}')\n",
    "print(f'd1の真の値：{d1}\\t\\td1の推定量：{res_ols.params[1]}')\n",
    "print(f'd2の真の値：{d2}\\t\\td2の推定量：{res_ols.params[2]}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "標本の大きさが非常に大きくてもバイアスは消えない。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "heading_collapsed": true,
    "hidden": true
   },
   "source": [
    "### シミュレーション２：推定値の分布"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "`OLS`推定量の分布を確認する。シミュレーション１と同じパラメータの真の値を使う。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "s0 = 1.0\n",
    "s1 = 0.5\n",
    "\n",
    "d0 = 1.5\n",
    "d1 = -1\n",
    "d2 = 2.0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの回数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "N = 100_000"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの関数を設定する。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "@njit\n",
    "def sim_simul(n):\n",
    "    \n",
    "    b0hat_list = []\n",
    "    b1hat_list = []\n",
    "    b2hat_list = []\n",
    "\n",
    "    xd = np.random.uniform(1, 10, size=n)  # 説明変数\n",
    "    \n",
    "    c = np.ones(n)  # 定数項\n",
    "    \n",
    "    for i in range(N):\n",
    "        # 母集団の誤差項\n",
    "        ud = np.random.normal(loc=0, scale=1, size=n)\n",
    "        \n",
    "        # 母集団の誤差項\n",
    "        us = np.random.normal(loc=0, scale=2, size=n)\n",
    "        \n",
    "        # 母集団の労働供給曲線\n",
    "        l = (s0+s1*d0)/(1-s1*d1) + (s1*d2/(1-s1*d1))*xd + (s1*ud+us)/(1-s1*d1)\n",
    "        \n",
    "        # 母集団の労働需要曲線\n",
    "        w = (d0+d1*s0)/(1-s1*d1) + d2*xd + (d1*us+ud)/(1-s1*d1)\n",
    "\n",
    "        # 説明変数の行列\n",
    "        X = np.stack((c,l,xd), axis=1)\n",
    "        \n",
    "        # 労働需要曲線を使い賃金をOLS推定\n",
    "        bhat = np.linalg.inv((X.T)@X)@(X.T)@w  # OLS推定\n",
    "        \n",
    "        b0hat_list.append(bhat[0])\n",
    "        b1hat_list.append(bhat[1])\n",
    "        b2hat_list.append(bhat[2])\n",
    "\n",
    "    return b0hat_list, b1hat_list, b2hat_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "シミュレーションの開始"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "b0hat, b1hat, b2hat = sim_simul(100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_0$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b0hat,bins=30)\n",
    "plt.axvline(x=d0,color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_1$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b1hat,bins=30)\n",
    "plt.axvline(x=d1,color='red')\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "hidden": true
   },
   "source": [
    "$\\hat{\\beta}_2$の分布"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "hidden": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYMAAAD4CAYAAAAO9oqkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAATRUlEQVR4nO3df5Dd9V3v8efrJkX7O6EslSbBxDZSaadOMQLqVbmNQoBqcISZVEdyMTOZ8aK36rUW6ozMtDITxjull6ltJwOxQWspg1Si0GKGH7d6WyhLy6WFlGYHEFawbG9SWkSroW//OJ/cnoazmz3n7O7ZJM/HzM75ft/fz/fse09+vPbz/XFOqgpJ0rHtP426AUnS6BkGkiTDQJJkGEiSMAwkScDSUTcwqBNOOKFWr17d/46PPNJ5POWUOe1Hko4E999//9erauzQ+hEbBqtXr2Z8fLz/Hc86q/N4991z2Y4kHRGS/EOvuoeJJEmGgSTJMJAkMYswSLIjyTNJvtxV++MkX0nyYJJPJlnWte3yJBNJHklyTld9Q6tNJLmsq74myb1J9ib5RJLj5vIHlCQd3mxmBh8FNhxS2w28uareAnwVuBwgyanAJuBNbZ8PJVmSZAnwJ8C5wKnAO9pYgKuAq6tqLbAf2DLUTyRJ6tthw6CqPgPsO6T2t1V1oK3eA6xsyxuBG6rq21X1GDABnN6+Jqrq0ar6N+AGYGOSAG8Dbmr77wQuGPJnkiT1aS7OGfw68Km2vAJ4smvbZKtNV38N8I2uYDlY7ynJ1iTjScanpqbmoHVJEgwZBkn+ADgAfOxgqcewGqDeU1Vtr6p1VbVubOxF90xIkgY08E1nSTYDbwfW13c/FGESWNU1bCXwVFvuVf86sCzJ0jY76B4vSVogA4VBkg3Au4GfrarnuzbtAv4iyfuB1wFrgc/TmQGsTbIG+Ec6J5l/paoqyV3AhXTOI2wGbhn0h5E091ZfdmvP+uPbzl/gTjSfZnNp6ceBzwGnJJlMsgX4IPBKYHeSB5J8BKCqHgJuBB4GPg1cWlUvtN/6fxO4HdgD3NjGQidUfjfJBJ1zCNfN6U8oSTqsw84MquodPcrT/oddVVcCV/ao3wbc1qP+KJ2rjSRJI+IdyJIkw0CSZBhIkjiCP89A0tyZ7oohHTucGUiSDANJkmEgScIwkCRhGEiSMAwkSRgGkiQMA0kS3nQmaUAz3ajm21sfeZwZSJIMA0mSYSBJwjCQJGEYSJIwDCRJGAaSJLzPQDpm+AE2mokzA0mSYSBJMgwkSRgGkiQMA0kSswiDJDuSPJPky12145PsTrK3PS5v9SS5JslEkgeTnNa1z+Y2fm+SzV31H0vypbbPNUky1z+kJGlms5kZfBTYcEjtMuCOqloL3NHWAc4F1ravrcCHoRMewBXAGcDpwBUHA6SN2dq136HfS5I0zw4bBlX1GWDfIeWNwM62vBO4oKt+fXXcAyxLchJwDrC7qvZV1X5gN7ChbXtVVX2uqgq4vuu5JEkLZNBzBq+tqqcB2uOJrb4CeLJr3GSrzVSf7FHvKcnWJONJxqempgZsXZJ0qLk+gdzreH8NUO+pqrZX1bqqWjc2NjZgi5KkQw0aBl9rh3hoj8+0+iSwqmvcSuCpw9RX9qhLkhbQoGGwCzh4RdBm4Jau+sXtqqIzgWfbYaTbgbOTLG8njs8Gbm/bvpXkzHYV0cVdzyVJWiCHfaO6JB8HzgJOSDJJ56qgbcCNSbYATwAXteG3AecBE8DzwCUAVbUvyfuA+9q491bVwZPSv0HniqWXAp9qX5KkBXTYMKiqd0yzaX2PsQVcOs3z7AB29KiPA28+XB+SpPnjHciSJMNAkmQYSJIwDCRJGAaSJPwMZEnzYKbPW3582/kL2Ilmy5mBJMkwkCQZBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJHxvIumoM9P7AknTcWYgSTIMJEmGgSQJw0CShGEgScIwkCRhGEiSMAwkSQwZBkl+J8lDSb6c5ONJvj/JmiT3Jtmb5BNJjmtjv6+tT7Ttq7ue5/JWfyTJOcP9SJKkfg0cBklWAP8dWFdVbwaWAJuAq4Crq2otsB/Y0nbZAuyvqjcAV7dxJDm17fcmYAPwoSRLBu1LktS/YQ8TLQVemmQp8DLgaeBtwE1t+07ggra8sa3Ttq9Pkla/oaq+XVWPARPA6UP2JUnqw8BhUFX/CPxP4Ak6IfAscD/wjao60IZNAiva8grgybbvgTb+Nd31Hvt8jyRbk4wnGZ+amhq0dUnSIYY5TLSczm/1a4DXAS8Hzu0xtA7uMs226eovLlZtr6p1VbVubGys/6YlST0Nc5jo54DHqmqqqv4duBn4SWBZO2wEsBJ4qi1PAqsA2vZXA/u66z32kSQtgGHC4AngzCQva8f+1wMPA3cBF7Yxm4Fb2vKutk7bfmdVVatvalcbrQHWAp8foi9JUp8G/jyDqro3yU3AF4ADwBeB7cCtwA1J/qjVrmu7XAf8WZIJOjOCTe15HkpyI50gOQBcWlUvDNqXJKl/Q324TVVdAVxxSPlRelwNVFX/Clw0zfNcCVw5TC+SpMF5B7IkyTCQJBkGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkhjyDmRJ6tfqy27tWX982/kL3Im6OTOQJBkGkiTDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJLzpTDoiTXfjljQoZwaSJMNAkmQYSJIwDCRJGAaSJAwDSRKGgSSJIcMgybIkNyX5SpI9SX4iyfFJdifZ2x6Xt7FJck2SiSQPJjmt63k2t/F7k2we9oeSJPVn2JnB/wI+XVVvBH4U2ANcBtxRVWuBO9o6wLnA2va1FfgwQJLjgSuAM4DTgSsOBogkaWEMHAZJXgX8DHAdQFX9W1V9A9gI7GzDdgIXtOWNwPXVcQ+wLMlJwDnA7qraV1X7gd3AhkH7kiT1b5iZwQ8BU8CfJvlikmuTvBx4bVU9DdAeT2zjVwBPdu0/2WrT1V8kydYk40nGp6amhmhdktRtmDBYCpwGfLiq3gr8M989JNRLetRqhvqLi1Xbq2pdVa0bGxvrt19J0jSGCYNJYLKq7m3rN9EJh6+1wz+0x2e6xq/q2n8l8NQMdUnSAhk4DKrqn4Ank5zSSuuBh4FdwMErgjYDt7TlXcDF7aqiM4Fn22Gk24GzkyxvJ47PbjVJ0gIZ9i2sfwv4WJLjgEeBS+gEzI1JtgBPABe1sbcB5wETwPNtLFW1L8n7gPvauPdW1b4h+5Ik9WGoMKiqB4B1PTat7zG2gEuneZ4dwI5hepEkDc47kCVJhoEkyTCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCQx/BvVSdKcWH3ZrdNue3zb+QvYybHJmYEkyTCQJBkGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkvAOZGnRmumOXGmuOTOQJBkGkiTDQJKEYSBJYg7CIMmSJF9M8jdtfU2Se5PsTfKJJMe1+ve19Ym2fXXXc1ze6o8kOWfYniRJ/ZmLmcE7gT1d61cBV1fVWmA/sKXVtwD7q+oNwNVtHElOBTYBbwI2AB9KsmQO+pIkzdJQYZBkJXA+cG1bD/A24KY2ZCdwQVve2NZp29e38RuBG6rq21X1GDABnD5MX5Kk/gw7M/gA8PvAd9r6a4BvVNWBtj4JrGjLK4AnAdr2Z9v4/1/vsc/3SLI1yXiS8ampqSFblyQdNHAYJHk78ExV3d9d7jG0DrNtpn2+t1i1varWVdW6sbGxvvqVJE1vmDuQfwr4xSTnAd8PvIrOTGFZkqXtt/+VwFNt/CSwCphMshR4NbCvq35Q9z6SpAUw8Mygqi6vqpVVtZrOCeA7q+pXgbuAC9uwzcAtbXlXW6dtv7OqqtU3tauN1gBrgc8P2pckqX/z8d5E7wZuSPJHwBeB61r9OuDPkkzQmRFsAqiqh5LcCDwMHAAuraoX5qEvSdI05iQMqupu4O62/Cg9rgaqqn8FLppm/yuBK+eiF0lS/7wDWZJkGEiSDANJEoaBJAnDQJKEYSBJws9AlnQEmOnzoB/fdv4CdnL0cmYgSTIMJEmGgSQJw0CShGEgScKriaSRmukqGWkhOTOQJBkGkiTDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCQxRBgkWZXkriR7kjyU5J2tfnyS3Un2tsflrZ4k1ySZSPJgktO6nmtzG783yebhfyxJUj+GmRkcAP5HVf0IcCZwaZJTgcuAO6pqLXBHWwc4F1jbvrYCH4ZOeABXAGcApwNXHAwQSdLCGDgMqurpqvpCW/4WsAdYAWwEdrZhO4EL2vJG4PrquAdYluQk4Bxgd1Xtq6r9wG5gw6B9SZL6NycfbpNkNfBW4F7gtVX1NHQCI8mJbdgK4Mmu3SZbbbp6r++zlc6sgpNPPnkuWpd0hJvpA4Ie33b+AnZyZBv6BHKSVwB/Cfx2VX1zpqE9ajVD/cXFqu1Vta6q1o2NjfXfrCSpp6HCIMlL6ATBx6rq5lb+Wjv8Q3t8ptUngVVdu68EnpqhLklaIMNcTRTgOmBPVb2/a9Mu4OAVQZuBW7rqF7eris4Enm2Hk24Hzk6yvJ04PrvVJEkLZJhzBj8F/BrwpSQPtNp7gG3AjUm2AE8AF7VttwHnARPA88AlAFW1L8n7gPvauPdW1b4h+pIk9WngMKiqv6f38X6A9T3GF3DpNM+1A9gxaC+SpOHMydVEkmY20xUv0mLg21FIkgwDSZJhIEnCMJAkYRhIkjAMJEkYBpIkDANJEt50JukoNt3Nfr619Ys5M5AkGQaSJMNAkoTnDKQ545vR6UjmzECSZBhIkgwDSRKGgSQJw0CShFcTSToGzXTl17F6d7IzA0mSMwOpH95LoKOVMwNJkmEgSfIwkSR9j2P15LJhIPXguQEdaxbNYaIkG5I8kmQiyWWj7keSjiWLYmaQZAnwJ8DPA5PAfUl2VdXDo+1MRzN/+1e/juZPTlsUYQCcDkxU1aMASW4ANgKGgYbif/haCIP+PVtMIbJYwmAF8GTX+iRwxqGDkmwFtrbV55I8MuD3O4Hk6wPuO19OAOxpdhZjX/Y0e4uxr5H0lKtm3DxfPf1gr+JiCYP0qNWLClXbge1Df7NkvKrWDfs8c8meZm8x9mVPs7cY+7KnxXMCeRJY1bW+EnhqRL1I0jFnsYTBfcDaJGuSHAdsAnaNuCdJOmYsisNEVXUgyW8CtwNLgB1V9dA8fsuhDzXNA3uavcXYlz3N3mLs65jvKVUvOjQvSTrGLJbDRJKkETIMJElHbxgkWZXkriR7kjyU5J09xiTJNe0tMB5Mctoi6OmNST6X5NtJfm8+++mjp19tr8+DST6b5EcXSV8bW08PJBlP8p9H3VPX2B9P8kKSC0fdU5KzkjzbXqcHkvzhqHvq6uuBNuZ/z2dPs+0rybu6Xqcvtz/D40fc06uT/HWS/9vGXDIvzVTVUfkFnASc1pZfCXwVOPWQMecBn6Jzn8OZwL2LoKcTgR8HrgR+b5G8Tj8JLG/L587369RHX6/gu+e93gJ8ZdQ9tW1LgDuB24ALR90TcBbwN/P9Z9ZnT8vovMPAyW39xMXQ1yHjfwG4c9Q9Ae8BrmrLY8A+4Li57uWonRlU1dNV9YW2/C1gD507nbttBK6vjnuAZUlOGmVPVfVMVd0H/Pt89TFAT5+tqv1t9R4694Eshr6eq/YvBHg5PW5UXOiemt8C/hJ4Zj776bOnBTPLnn4FuLmqnmjjFuNr9Q7g44ugpwJemSR0fgHaBxyY616O2jDolmQ18Fbg3kM29XobjAX5hzRDTyMzy5620JlNLZiZ+kryS0m+AtwK/Pqoe0qyAvgl4CML1cvhemp+oh1m+FSSNy2Cnn4YWJ7k7iT3J7l4oXo6TF8Ht78M2EAn1Efd0weBH6FzI+6XgHdW1Xfm+vsvivsM5lOSV9D5A/3tqvrmoZt77DLv19oepqeRmE1PSf4LnTCY12Pz/fRVVZ8EPpnkZ4D3AT834p4+ALy7ql7o/CK3MA7T0xeAH6yq55KcB/wVsHbEPS0FfgxYD7wU+FySe6rqqyPu66BfAP5PVe2b735m0dM5wAPA24DXA7uT/N1c/99xVM8MkryEzgv8saq6uceQBX8bjFn0tOBm01OStwDXAhur6v8tlr4OqqrPAK9PcsKIe1oH3JDkceBC4ENJLhhlT1X1zap6ri3fBrxkEbxOk8Cnq+qfq+rrwGeAhbgwYbZ/pzYxz4eI+ujpEjqH1KqqJoDHgDfOdR9HbRi042vXAXuq6v3TDNsFXJyOM4Fnq+rpEfe0oGbTU5KTgZuBX1uI39z66OsNbRzpXAl2HDBvQTWbnqpqTVWtrqrVwE3Af6uqvxplT0l+oOt1Op3Ov/uRvk7ALcBPJ1naDsmcQed4+byZ7b+/JK8Gfrb1OK9m2dMTdGZQJHktcArw6Jz38t3zb0eXdC4z/Ds6x9gOHl97D3AyQFV9pP1BfJDOscHngUuqanzEPf0AMA68qo15js7VBfNyOGmWPV0L/DLwD237gZrnd1OcZV/vBi6mc7L9X4B3VdXfj7KnQ8Z/lM5VPDeNsqd03urlN+icdPwX4Her6rOj7KmNexed33q/A1xbVR+Yr5767Ou/AhuqatN89jPbnpK8DvgonSuPAmyrqj+f816O1jCQJM3eUXuYSJI0e4aBJMkwkCQZBpIkDANJEoaBJAnDQJIE/AeaxFUzAtbTVAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(b2hat,bins=30)\n",
    "plt.axvline(x=d2,color='red')\n",
    "pass"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "latest",
   "language": "python",
   "name": "latest"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
